CREATE_AUTH_TABLE : |
  CREATE TABLE IF NOT EXISTS auth(
  user_id INTEGER PRIMARY KEY,
  email VARCHAR(25) UNIQUE NOT NULL,
  password VARCHAR(255) NOT NULL,
  role VARCHAR(25) DEFAULT 'Employee',
  is_def_pwd_changed VARCHAR(25) DEFAULT 'False'
  );

CREATE_USER_DETAILS_TABLE : |
  CREATE TABLE IF NOT EXISTS user_details(
  user_id INTEGER PRIMARY KEY,
  name VARCHAR(25),
  email VARCHAR(25) UNIQUE,
  gender VARCHAR(25),
  FOREIGN KEY (user_id) REFERENCES auth (user_id)
  );

CREATE_DOSE_DETAILS_TABLE : |
  CREATE TABLE IF NOT EXISTS dose_details(
  s_no INTEGER PRIMARY KEY AUTO_INCREMENT,
  user_id INTEGER,
  vaccine_name VARCHAR(25) NOT NULL,
  dose_num INTEGER NOT NULL,
  dose_date VARCHAR(25) NOT NULL,
  dose_cid VARCHAR(25) UNIQUE NOT NULL,
  FOREIGN KEY (user_id) REFERENCES user_details(user_id)
  )

CREATE_ADMIN_APPROVAL_TABLE : |
  CREATE TABLE IF NOT EXISTS admin_approval(
  approval_id INTEGER PRIMARY KEY AUTO_INCREMENT,
  user_id INTEGER NOT NULL,
  dose_num INTEGER NOT NULL,
  dose_cid varchar(25) NOT NULL,
  dose_is_approved varchar(25) DEFAULT 'No',
  FOREIGN KEY(user_id) REFERENCES user_details (user_id)
  )

CREATE_VACCINE_TABLE : |
  CREATE TABLE IF NOT EXISTS vaccine(
  vaccine_id INTEGER PRIMARY KEY AUTO_INCREMENT,
  vaccine_name varchar(25) NOT NULL
  )

CREATE_REVOKED_TOKENS_TABLE : |
  CREATE TABLE IF NOT EXISTS revoked_tokens(
    rev_token_id VARCHAR(255) PRIMARY KEY,
    rev_token_jti VARCHAR(255) UNIQUE NOT NULL,
    rev_token_exp VARCHAR(255) NOT NULL
  )

USER_DATA : 'SELECT * FROM auth WHERE email = %s'

UPDATE_PWD : 'UPDATE auth SET password = %s, is_def_pwd_changed = "True" WHERE email = %s'

ADD_USER : "INSERT INTO auth (user_id, email, password) VALUES (%s, %s, %s)"

FETCH_BY_DOSE : 'SELECT user_id, email, vaccination_status FROM user_details WHERE vaccination_status = %s'

FETCH_BY_VACCINE : |
  SELECT u.user_id, u.email, d.vaccine_name, d.dose_date, d.dose_num, d.dose_cid
  FROM user_details AS u JOIN dose_details AS d
  ON u.user_id = d.user_id 
  WHERE d.vaccine_name = %s

FETCH_BY_DOSE1_DATE : |
  SELECT u.user_id, u.email, d.vaccine_name, d.dose_date, d.dose_num, d.dose_cid
  FROM user_details AS u JOIN dose_details AS d
  ON u.user_id = d.user_id WHERE (d.dose_date = %s
  and d.dose_num = 1)

FETCH_BY_DOSE2_DATE : |
  SELECT u.user_id, u.email, d.vaccine_name, d.dose_date, d.dose_cid 
  FROM user_details AS u JOIN dose_details AS d
  ON u.user_id = d.user_id WHERE (d.dose_date = %s
  and d.dose_num = 2)

ADD_VACCINE : 'INSERT INTO vaccine (vaccine_name) VALUES (%s)'

FETCH_USER : "SELECT * FROM dose_details WHERE user_id = %s"

FETCH_USER_DOSE_2: "Select * from dose_details WHERE user_id = %s and dose_num = %s"

DOSE_ALREADY: "Select * from dose_details WHERE user_id = %s and dose_num = %s"

APPROVE_DOSE_INFO : "UPDATE admin_approval SET dose_is_approved = 'Yes' WHERE approval_id = %s"

FETCH_APPROVAL_DATA : "SELECT * FROM admin_approval WHERE dose_is_approved = 'No' "

FETCH_2APPROVAL_DATA : 'SELECT * FROM admin_approval WHERE dose_is_approved = "No" and dose_num = 2'

FETCH_VACC_STATUS : 'SELECT count(user_id) FROM dose_details WHERE user_id = %s'

FETCH_DOSE_1_DETAILS : 'SELECT * FROM dose_details WHERE user_id = %s and dose_num = 1'

USER_DOSES: |
  SELECT
  dose_details.*,
  admin_approval.approval_id,
  admin_approval.dose_is_approved
  FROM dose_details WHERE user_id = %s
  INNER JOIN admin_approval
  ON admin_approval.user_id = dose_details.user_id
  and admin_approval.dose_num = dose_details.dose_num
  and admin_approval.dose_cid = dose_details.dose_cid;

FETCH_VACCINE_DETAILS : 'SELECT * FROM vaccine WHERE vaccine_name = %s'

ADD_DOSE_DETAILS : "INSERT INTO dose_details (user_id, vaccine_name, dose_num, dose_date,dose_cid) VALUES (%s,%s,%s,%s,%s)"

ADD_TO_ADMIN_APPROVAL : "INSERT INTO admin_approval (user_id, dose_num, dose_cid) values (%s, %s, %s)"

UPDATE_ADMIN_APPROVAL : 'UPDATE admin_approval SET dose_1_cid = %s WHERE user_id = %s'

UPDATE_DOSE2_DETAILS : 'UPDATE dose_details SET dose_2_date = %s, dose_2_cid = %s WHERE user_id = %s'

UPDATE_ADMIN_APPROVAL2 : 'UPDATE admin_approval SET dose_2_cid = %s WHERE user_id = %s'

SELECT_DOSE1_DATE : 'SELECT dose_1_date FROM dose_details WHERE user_id = %s'

UPDATE_NAME : 'UPDATE user_details SET name = %s WHERE user_id = %s'

UPDATE_GENDER : 'UPDATE user_details SET gender = %s WHERE user_id = %s'

FETCH_APPROVED_DATA : 'SELECT * FROM admin_approval WHERE dose_is_approved = "Yes"'

ADD_USER_DETAILS : "INSERT INTO user_details (user_id, email) values (%s,%s)"

FETCH_AUTH_DATA : "SELECT * FROM auth WHERE email = %s"

FETCH_VACCINE_NAME :  'SELECT vaccine_name FROM vaccine'

IS_DOSE_ID_ALREADY_PRESENT : 'SELECT * FROM dose_details WHERE dose_cid = %s'

FETCH_VACCINE : 'SELECT * FROM vaccine'

FETCH_DOSE_DETAILS_BY_DOSE_CID : 'SELECT * FROM dose_details WHERE dose_cid = %s '

FETCH_DOSE_DETAILS_BY_DOSE2CID : 'SELECT * FROM dose_details WHERE dose_cid = %s and dose_num = 2'

FETCH_USER_DETAILS : 'SELECT user_details.user_id, user_details.email, dose_details.vaccine_name, dose_details.dose_date, dose_details.dose_num
  FROM user_details INNER JOIN dose_details 
  ON user_details.user_id = dose_details.user_id'

FETCH_DOSE_0_EMPLOYEES : "SELECT user_details.user_id, user_details.email, dose_details.vaccine_name, dose_details.dose_date, 
  dose_details.dose_num, dose_details.dose_cid
  FROM user_details
  LEFT JOIN dose_details 
  ON user_details.user_id = dose_details.user_id
  WHERE dose_details.user_id IS NULL"

FETCH_DOSE_1_EMPLOYEES : "SELECT u.user_id, u.email, d.vaccine_name, d.dose_date, d.dose_num, d.dose_cid 
  FROM user_details as u JOIN dose_details as d 
  ON u.user_id = d.user_id WHERE d.dose_num = 1"

FETCH_SPECIFIC_VACCINE : "SELECT * FROM vaccine WHERE vaccine_id = %s" 

FETCH_USERS_BY_DATE : "Select u.user_id, u.email, d.vaccine_name, d.dose_date, d.dose_num, d.dose_cid
 FROM user_details JOIN dose_details 
 ON u.user_id = d.user_id
 WHERE date = %s"

FETCH_PROFILE : "Select * FROM user_details where user_id=%s"

ADD_REV_TOKEN : "INSERT INTO revoked_tokens VALUES (%s, %s, %s)"

FETCH_REV_TOKEN : "SELECT 1 FROM revoked_tokens WHERE rev_token_jti = %s"

CHANGE_PASSWORD: "UPDATE auth SET password = %s, is_def_pwd_changed = %s WHERE user_id = %s"

REMOVE_VACCINE: "Delete FROM vaccine WHERE vaccine_id=%s"
